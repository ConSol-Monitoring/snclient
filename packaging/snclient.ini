[/paths]
; exe-path - Path to snclient executable (auto-detected).
exe-path =

; shared-path- Path to shared things.
shared-path = /etc/snclient

; scripts - Path to scripts.
scripts = ${shared-path}/scripts

; certificate-path - Path for certificates.
certificate-path = ${shared-path}


[/modules]
; WEBServer - Enable HTTP REST API requests via check_nsc_web.
WEBServer = enabled

; WEBAdminServer - Enable HTTP REST API requests for administrative tasks.
WEBAdminServer = disabled

; NRPEServer - Enable NRPE server.
NRPEServer = disabled

; PrometheusServer - Enable /metrics HTTP server for the agent itself.
PrometheusServer = disabled

; NodeExporterServer - Enable prometheus linux node exporter
NodeExporterServer = disabled

; WindowsExporterServer - Enable prometheus windows exporter
WindowsExporterServer = disabled

; ExporterExporterServer - Enable prometheus exporter_exporter server.
ExporterExporterServer = disabled

; ManagedExporterServer - Enable managed custom prometheus exporter
ManagedExporterServer = disabled

; CheckBuiltinPlugins - Enable builtin plugins from /settings/builtin plugins/... like check_nsc_web
CheckBuiltinPlugins = disabled

; CheckAlias - Enable script aliases from /settings/external scripts/alias
CheckAlias = enabled

; CheckExternalScripts - Enable scripts from /settings/external scripts/...
CheckExternalScripts = disabled

; CheckSystem - Collect windows cpu metrics which can be queried by the check_cpu plugin.
CheckSystem = enabled

; CheckSystemUnix - Collect non-windows cpu metrics which can be queried by the check_cpu plugin.
CheckSystemUnix = enabled

; CheckDisk - Controls wether check_drivesize is allowed or not.
CheckDisk = enabled

; CheckWMI - Controls wether check_wmi is allowed or not.
CheckWMI = disabled

; CheckLogFile - Controls wether check_logfile is allowed or not.
CheckLogFile = disabled


[/settings/default]
; allowed hosts - Comma separated list of ips/networks/hostname allowed to connect.
allowed hosts  = 127.0.0.1
allowed hosts += ::1

; cache allowed hosts - Cache resolved dns names.
cache allowed hosts = true

; timeout - Timeout when reading packets on incoming sockets.
timeout = 30

; bind to - Allows you to bind server to a specific local address.
; This has to be a dotted ip address not a host name. Leaving this blank will bind to all available IP addresses.
bind to =

; tls min version - Set minimum allowed tls version, leave empty to allow all versions
; or specify one of: tls1.0, tls1.1, tls1.2, tls1.3
tls min version = tls1.2

; insecure - Skip all ssl verifications (used in http client connections)
insecure = false

; nasty characters - List of forbidden characters in arguments (if allow nasty characters is false)
nasty characters = $|`&><'"\[]{}

; certificate - SSL certificate to use for the listeners.
certificate = ${certificate-path}/server.crt

; certificate key - ssl private key to use for the listeners.
certificate key = ${certificate-path}/server.key

; client certificates - require client certificate (list of pem files).
;client certificates = ${certificate-path}/client1.pem, ${certificate-path}/client2.pem

; password - must be changed from default value
; password can be stored encrypted when using the format: <HASH>:<hashed password>, ex.: SHA256:...
; supported hash algorithms are SHA256, you can use "snclient hash" to generate password hashes.
password = CHANGEME

; require password - Allow connections without password. This option determines whether clients are allowed to connect without a password at all.
require password = true

; use HSTS header - This option controls if the HSTS header will be added to HTTP responses.
use hsts header = true


[/settings/ExporterExporter/server]
; ExporterExporterServer - Enable prometheus exporter_exporter server. (overrides the global option from the /modules section if uncommented)
;ExporterExporterServer = disabled

; port - Port to use for exporter_exporter.
port = ${/settings/WEB/server/port}

; use ssl - This option controls if SSL will be enabled.
use ssl = ${/settings/WEB/server/use ssl}

; url prefix - set prefix to provided urls (/list & /proxy)
url prefix = /

; modules dir - set folder with yaml module definitions
modules dir = ${shared-path}/exporter_modules

; default module - set default module if no specific module is requested
default module =

; use default web attributes here, ex.: password, allowed hosts, certificates, etc...


;[/settings/ManagedExporter/example]
; ManagedExporterServer - Enable managed custom prometheus exporter. (overrides the global option from the /modules section if uncommented)
;ManagedExporterServer = disabled

; agent path - sets path to prometheus-exporter binary
;agent path = ${shared-path}/prometheus/custom_exporter.exe

; agent args - sets additional arguments for the node exporter
;agent args = --web.listen-address=${agent address}

; agent port - sets internal listen address (ex.: --web.listen-address=)
;agent address = 127.0.0.1:9990

; agent max memory - set a memory limit for the agent (agent will be restarted if the rss is higher, set to 0 to disabled)
;agent max memory = 256M

; agent user - set user this agent should run as (requires root permissions)
;agent user = nobody

; port - Port to use for the node exporter.
;port = ${/settings/WEB/server/port}

; use ssl - This option controls if SSL will be enabled.
;use ssl = ${/settings/WEB/server/use ssl}

; url prefix - set prefix to provided urls (/exportername)
;url prefix = /example

; url match - set pattern which will forwarded to the exporter (use * to forward all urls below the prefix)
;url match = /metrics

; kill already running exporters based on path and args
;kill orphaned = enabled


[/settings/NRPE/server]
; enable the NRPE server. (overrides the global option from the /modules section if uncommented)
;NRPEServer = disabled

; port - Port to use for NRPE.
port = 5666

; use ssl - This option controls if SSL will be enabled.
use ssl = true

; allow arguments - This option determines whether or not the we will allow clients to specify arguments to commands that are executed.
allow arguments = true

; allow nasty characters - This option determines whether or not the we will allow clients to specify nasty (as defined in nasty characters) characters in arguments.
allow nasty characters = false


[/settings/NodeExporter/server]
; NodeExporterServer - Enable prometheus linux node exporter. (overrides the global option from the /modules section if uncommented)
;NodeExporterServer = disabled

; agent path - sets path to node-exporter binary
agent path = /usr/lib/snclient/node_exporter

; agent args - sets additional arguments for the node exporter (do not set web.listen-address here, it will be added automatically)
agent args =

; agent port - sets internal listen address (--web.listen-address=)
agent address = 127.0.0.1:9990

; agent max memory - set a memory limit for the agent (agent will be restarted if the rss is higher, set to 0 to disabled)
agent max memory = 256M

; agent user - set user this agent should run as (requires root permissions)
agent user = nobody

; port - Port to use for the node exporter.
port = ${/settings/WEB/server/port}

; use ssl - This option controls if SSL will be enabled.
use ssl = ${/settings/WEB/server/use ssl}

; url prefix - set prefix to provided urls (/metrics)
url prefix = /node

; kill already running exporters based on path and args
kill orphaned = enabled

; require password - Allow connections without password. This option determines whether clients are allowed to connect without a password at all.
require password = true


[/settings/Prometheus/server]
; PrometheusServer - Enable /metrics HTTP server for the agent itself. (overrides the global option from the /modules section if uncommented)
;PrometheusServer = disabled

; port - Port to use for WEB server.
port = 9999

; use ssl - This option controls if SSL will be enabled.
use ssl = true

; require password - Allow connections without password. This option determines whether clients are allowed to connect without a password at all.
require password = true

; use default web attributes here, ex.: password, allowed hosts, certificates, etc...


; Web server - Section for http REST service
[/settings/WEB/server]
; WEBServer - Enable HTTP REST API requests via check_nsc_web. (overrides the global option from the /modules section if uncommented)
;WEBServer = enabled

; use ssl - This option controls if SSL will be enabled.
use ssl = true

; port - Port to use for WEB server.
port = 8443

; allow arguments - This option determines whether or not the we will allow clients to specify arguments to commands that are executed.
allow arguments = true

; allow nasty characters - This option determines whether or not the we will allow clients to specify nasty (as defined in nasty characters) characters in arguments.
allow nasty characters = false

; use default web attributes here, ex.: password, allowed hosts, certificates, etc...


[/settings/WEBAdmin/server]
; WEBAdminServer - Enable HTTP REST API requests for administrative tasks. (overrides the global option from the /modules section if uncommented)
;WEBAdminServer = disabled

; port - Port to use for the admin rest api.
port = ${/settings/WEB/server/port}

; use ssl - This option controls if SSL will be enabled.
use ssl = ${/settings/WEB/server/use ssl}

; password - must be changed from default value
; password can be stored encrypted when using the format: <HASH>:<hashed password>, ex.: SHA256:...
; supported hash algorithms are SHA256, you can use "snclient hash" to generate password hashes.
password = CHANGEME

; require password - Allow connections without password. This option determines whether clients are allowed to connect without a password at all.
require password = true

; use default web attributes here, ex.: password, allowed hosts, certificates, etc...


[/settings/WindowsExporter/server]
; WindowsExporterServer - Enable prometheus windows exporter. (overrides the global option from the /modules section if uncommented)
;WindowsExporterServer = disabled

; agent path - sets path to node-exporter binary
agent path = ${shared-path}/exporter/windows_exporter.exe

; agent args - sets additional arguments for the windows exporter (do not set web.listen-address here, it will be added automatically)
agent args =

; agent port - sets internal listen address (--web.listen-address=)
agent address = 127.0.0.1:9990

; agent max memory - set a memory limit for the agent (agent will be restarted if the rss is higher, set to 0 to disabled)
agent max memory = 256M

; port - Port to use for the node exporter.
port = ${/settings/WEB/server/port}

; use ssl - This option controls if SSL will be enabled.
use ssl = ${/settings/WEB/server/use ssl}

; url prefix - set prefix to provided urls (/metrics)
url prefix = /node

; kill already running exporters based on path and args
kill orphaned = enabled

; require password - Allow connections without password. This option determines whether clients are allowed to connect without a password at all.
require password = true


; Builtin plugins settings - General settings for the builtin plugins
[/settings/builtin plugins]


; builtin plugins: default - The configuration section for all builtin plugins
[/settings/builtin plugins/default]

; disabled - Disable this command
disabled = false


; check_logfile settings - configure settings for check_logfile
; do not mix up with log settings for the snclient itself which are in [/settings/log]
[/settings/check/logfile]

; allowed pattern - Comma separated list of glob pattern which are allowed to be checked by check_logfile
allowed pattern  = /var/log/**
allowed pattern += ${shared-path}/*.log
allowed pattern += /var/log/snclient/snclient.log


; External script settings - General settings for the external scripts module (CheckExternalScripts).
[/settings/external scripts]

; timeout - The maximum time in seconds that a command can execute. (if more then this execution will be aborted).
; NOTICE this only affects external commands not internal ones.
; NOTICE also make sure the /settings/default/timeout is longer than this, otherwise the connection will be dropped before the script finishes
timeout = 60

; Allow arguments when executing external scripts - This option determines whether or not the we will allow
; clients to specify arguments to commands that are executed.
allow arguments = false

; Allow certain potentially dangerous characters in arguments - This option determines whether or not
; we will allow clients to specify nasty (as defined in nasty characters) characters in arguments.
allow nasty characters = false

; Script root folder - Root path where all scripts are contained (You can not upload/download scripts outside this folder).
script root = ${scripts}

; Load all scripts in a given folder - Load all (${script path}/*.*) scripts in a given directory and use them as commands.
script path =

; ignore perfdata - Do not parse performance data from the output
ignore perfdata = no


; Command aliases - A list of aliases for already defined commands (with arguments).
; An alias is an internal command that has been predefined to provide a single command without arguments.
; Be careful so you do not create loops (ie check_loop=check_a, check_a=check_loop)
[/settings/external scripts/alias]


; alias: default - The configuration section for the default alias
[/settings/external scripts/alias/default]

; ignore perfdata - Do not parse performance data from the output
ignore perfdata = no

; command - Command to execute
command =


; External scripts - A list of scripts available to run from the CheckExternalScripts module.
; Syntax is: `commandname = path/script arguments...`
[/settings/external scripts/scripts]


; script: default - The configuration section for the  default script.
[/settings/external scripts/scripts/default]

; ignore perfdata - Do not parse performance data from the output
ignore perfdata = no

; command - Command to execute
command =


; Wrapped scripts - A list of wrapped scripts (ie. script using a template mechanism).
; The template used will be defined by the extension of the script.
; Thus a foo.ps1 will use the ps1 wrapping from the wrappings section.
; Syntax is: `command=script`
[/settings/external scripts/wrapped scripts]


; Script wrappings - A list of templates for defining script commands.
; Enter any command line here and they will be expanded by scripts placed under
; the wrapped scripts section.
; %SCRIPT% will be replaced by the actual script and
; %ARGS% will be replaced by any given arguments.
[/settings/external scripts/wrappings]

; Batch file - Command used for executing wrapped batch files
bat = ${script root}\\%SCRIPT% %ARGS%

; Visual basic script - Command line used for wrapped vbs scripts
vbs = cscript.exe //T:30 //NoLogo "${script root}\%SCRIPT%" %ARGS%

; Powershell Wrapping - Command line used for executing wrapped ps1 (powershell) scripts
ps1 = cmd /c echo If (-Not (Test-Path "${script root}\%SCRIPT%") ) { Write-Host "UNKNOWN: Script `"%SCRIPT%`" not found."; exit(3) }; ${script root}\%SCRIPT% $ARGS$; exit($lastexitcode) | powershell.exe -nologo -noprofile -WindowStyle hidden -NonInteractive -ExecutionPolicy ByPass -command -


; log - Configure log properties.
[/settings/log]

; file name - The file to write log data to.
; Set this to none or /dev/null to disable log to file or use "stdout" or "stderr" to log there.
file name = /var/log/snclient/snclient.log

; level - Log level to use. Available levels are error,warning,info,debug,trace.
level = info


; log file - Configure log file properties.
[/settings/log/file]

; max size - When file size reaches this it will be move to log.old. Set to 0 and rotation will be disabled.
max size = 0


; system - settings for collecting system metrics
[/settings/system/default]

; default buffer length - Contols the counter bucket size ex.: for cpu counter.
default buffer length = 15m

; metrics interval - Contols the interval for collecting cpu/network metrics
metrics interval = 5s

; device filter - exclude matching network devices from gathering network counter metrics, ex. for temporary devices
device filter = ^veth


; Unix system - Section for non windows system checks
[/settings/system/unix]


; Windows system - Section for windows system checks and system settings
[/settings/system/windows]


[/settings/updates]
; automatic updates - Update snclient automatically.
automatic updates = disabled

; automatic restart - Automatically restart snclient after update is finished.
automatic restart = disabled

; channel - comma separated list of channel to search for updates.
channel = stable

; pre release - Control if pre releases from the stable channel should be considered as well.
pre release = false

; insecure - Skip all ssl verifications.
insecure = false

; update hours - Set time range(s) in which updates are allowed.
update hours = 0-24

; update days - set day range(s) in which updates are allowed.
update days = mon-sun

; update interval - how often should snclient check for updates
update interval = 1h


[/settings/updates/channel]
; stable - This is the stable release channel.
stable = https://api.github.com/repos/ConSol-monitoring/snclient/releases

; dev - This url is for the development channel.
dev = https://api.github.com/repos/ConSol-monitoring/snclient/actions/artifacts

; custom - Any other url works as well.
; custom = https://company-server.local/snclient/snclient-${goos}-${pkgarch}${file-ext}

; local - Even local files can be checked.
; local = file://z:\updates\snclient-${goos}-${goarch}${file-ext}


[/settings/updates/channel/dev]
; github token - the dev channel requires a github token to download the update
;github token = <GITHUB-TOKEN>


[/settings/updates/channel/stable]
; github token - the stable channel does not stricly require a github token, only if you hit rate limits
;github token = <GITHUB-TOKEN>


; INCLUDED FILES - Files to be included in the configuration
[/includes]
local = snclient_local*.ini
